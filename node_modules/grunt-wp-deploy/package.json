{
  "_args": [
    [
      {
        "raw": "grunt-wp-deploy@^1.2.1",
        "scope": null,
        "escapedName": "grunt-wp-deploy",
        "name": "grunt-wp-deploy",
        "rawSpec": "^1.2.1",
        "spec": ">=1.2.1 <2.0.0",
        "type": "range"
      },
      "/Users/ben/eFiles/valet/test-site/wp-content/plugins/wp-monitor"
    ]
  ],
  "_from": "grunt-wp-deploy@>=1.2.1 <2.0.0",
  "_id": "grunt-wp-deploy@1.2.1",
  "_inCache": true,
  "_location": "/grunt-wp-deploy",
  "_nodeVersion": "4.4.3",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/grunt-wp-deploy-1.2.1.tgz_1483971405335_0.15330956899560988"
  },
  "_npmUser": {
    "name": "stephenharris",
    "email": "contact@stephenharris.info"
  },
  "_npmVersion": "2.15.1",
  "_phantomChildren": {
    "cli-color": "0.2.3"
  },
  "_requested": {
    "raw": "grunt-wp-deploy@^1.2.1",
    "scope": null,
    "escapedName": "grunt-wp-deploy",
    "name": "grunt-wp-deploy",
    "rawSpec": "^1.2.1",
    "spec": ">=1.2.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-wp-deploy/-/grunt-wp-deploy-1.2.1.tgz",
  "_shasum": "7d5c284157a181c106c45be052ba9aa71a3c2474",
  "_shrinkwrap": null,
  "_spec": "grunt-wp-deploy@^1.2.1",
  "_where": "/Users/ben/eFiles/valet/test-site/wp-content/plugins/wp-monitor",
  "author": {
    "name": "Stephen Harris",
    "email": "contact@stephenharris.info",
    "url": "http://stephenharris.info"
  },
  "bugs": {
    "url": "https://github.com/stephenharris/grunt-wp-deploy/issues"
  },
  "dependencies": {
    "inquirer": "~0.2.1"
  },
  "description": "Deploys a build directory to the WordPress SVN repo",
  "devDependencies": {
    "async": "^2.0.0-rc.6",
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-nodeunit": "^1.0.0",
    "jshint-stylish": "~0.1.3"
  },
  "directories": {},
  "dist": {
    "shasum": "7d5c284157a181c106c45be052ba9aa71a3c2474",
    "tarball": "https://registry.npmjs.org/grunt-wp-deploy/-/grunt-wp-deploy-1.2.1.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "gitHead": "db9e99de2ae9194e745748bfbe58bb525661b4d1",
  "homepage": "https://github.com/stephenharris/grunt-wp-deploy",
  "keywords": [
    "gruntplugin",
    "wordpress"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/stephenharris/grunt-wp-deploy/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "maintainers": [
    {
      "name": "stephenharris",
      "email": "contact@stephenharris.info"
    }
  ],
  "name": "grunt-wp-deploy",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": ">=0.4.1"
  },
  "readme": "[![Build Status](https://travis-ci.org/stephenharris/grunt-wp-deploy.svg?branch=develop)](https://travis-ci.org/stephenharris/grunt-wp-deploy)\n\n# grunt-wp-deploy\n\n> Deploys a git Repo to the WordPress SVN repo\n\n## Getting Started\nThis plugin requires Grunt `>=0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-wp-deploy --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-wp-deploy');\n```\n\n## The \"wp_deploy\" task\n\nThis task is for deploying a plug-in to the [WordPress repository](https://wordpress.org/plugins/) from a 'build directory'. \n\n### Before you start, you'll need...\n 1. To have been [accepted](https://wordpress.org/plugins/about/) on to the WordPress repository\n 2. **plugin-slug** - You can get this from your plug-in's repo url: *https://wordpress.org/plugins/{plugin-slug}*\n 3. **readme.txt** (or `readme.md`) - See [https://wordpress.org/plugins/about/#readme](https://wordpress.org/plugins/about/#readme) \n 4. **plugin-slug.php** - The 'main file' of the plug-in (containing the plugin header).\n 5. **build directory** - This a complete copy of the plug-in as you want it on the directory\n 6. (Optional) **assets directory** - This directory should contain the plug-in's screenshots and other files you want in the 'assets' directory in the root of the plug-ins WordPress SVN repo. See [https://wordpress.org/plugins/about/faq/](https://wordpress.org/plugins/about/faq/) for details.\n\n### Overview\nIn your project's Gruntfile, add a section named `wp_deploy` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n\twp_deploy: {\n\t\tdeploy: { \n\t\t\toptions: {\n\t\t\t\tplugin_slug: 'your-plugin-slug',\n\t\t\t\tsvn_user: 'your-wp-repo-username',\t\n\t\t\t\tbuild_dir: 'build', //relative path to your build directory\n\t\t\t\tassets_dir: 'wp-assets' //relative path to your assets directory (optional).\n\t\t\t},\n\t\t}\n\t},\n})\n```\n\n### Options\n\n#### options.plugin_slug\nType: `String`\nDefault value: `false`\n\nYour plug-in's slug as indicated by its repository url *https://wordpress.org/plugins/{plugin-slug}*\n\n#### options.plugin_main_file\nType: `String`\nDefault value: `false`\n\nUse this option if the name of your plug-in's main file (the PHP file with WordPress plugin headers) differs from the slug name. Pass the full file name with extension, e.g.: *my-plugin.php*\n\n#### options.svn_user\nType: `String`\nDefault value: `false`\n\nYour WordPress repository username. If not provided, you'll be prompted for this when the task runs.\n\n#### options.build_dir\nType: `String`\nDefault value: `false`\n\nThe directory where the plug-in exists as you want it on the repo.\n\n#### options.assets_dir\nType: `String`\nDefault value: `false`\n\nThe directory where the plug-in's assets (i.e. screenshots) exist. This gets copied into the 'assets' directory in the root of your WordPress SVN repo. Typically\nthis directory contains your plug-in's screenshots, which you want uploaded to the WordPress repo, but do not necessary want included in the plug-in distrubted \nto users. For more details see: [https://wordpress.org/plugins/about/faq/](https://wordpress.org/plugins/about/faq/).\n\n#### options.svn_url\nType: `String`\nDefault value: `https://plugins.svn.wordpress.org/{plugin-slug}`\n\nFor flexibilty this plug-in can work with other repos. Simple provide the SVN url, using `{plugin-slug}` as placeholder indicating where the plug-in slug should be.\n\n#### options.max_buffer\nType: `Integer`\nDefault value: `200*1024`\n\nSets the maximum buffer for the SVN checkout of the repo. \n\n#### options.tmp_dir\nType: `String`\nDefault value: `/tmp/`\n\nLocation where your SVN repository is checked out to. **Note:** Before the the repository is checked out `<tmp_dir>/<plugin_slug>` is deleted.\n\n#### options.skip_confirmation\nType: `Bool`\nDefault value: `false`\n\nIf `false`, you will be asked for confirmation before commiting the plug-in to the repository. This will give you the opportunity to inspect the `trunk` in the `options.tmp_dir` to see what is being committed.\n\n#### options.deploy_trunk\nType: `Bool`\nDefault value: `true`\n\nWhether to deploy to trunk. This could be set to `false` to only commit the assets directory.\n\n#### options.deploy_tag\nType: `Bool`\nDefault value: `true`\n\nWhether to deploy to a tag. You will need to have set to `options.deploy_trunk` to `true`. This can set to `false` to only deploy to trunk (e.g. when only updating the 'Tested up to' value and not deploying a release).\n\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n\n## Release History\n\n### 1.2.1 - 9th January\n- Fixed error message when plugin and readme version do not match\n- Fixed README.md (updated links to HTTPS, corrected example) thanks to @ntwb\n- Don't check the README version if `deploy_tag` is set to `false` - thanks to @mundschenk-at\n\n### 1.2.0 - 18th July 2016\n- Added option to disable the commit confirmation\n- Added options to disable committing to trunk and/or tag\n- Added support for `readme.md` (as an alternative to `readme.txt`).\n- Added support for variations on readme file casing (readme, README, ReadMe)\n\n### 1.1.0 - 20th July 2015\n- Add --force-interactive to request password if it is not know. Fixes [#15](https://github.com/stephenharris/grunt-wp-deploy/issues/15)\n- Set seperate message for trunk/tag/asset commits. Make logs more verbose. Ref [#10](https://github.com/stephenharris/grunt-wp-deploy/issues/10)\n- Add option (`tmp_dir`) for specifying the temporary directory to checkout the SVN repository to\n\n### 1.0.3 - 5th September 2014\n- Fixed bug with undefined max_buffer option. Thanks to @tamarazuk.\n\n### 1.0.2 - 4th September 2014\n- Fixes bug where files in sub directory are missed\n- Fixes bug where assets/build directory are not given a trailing slash\n- Adds max_buffer option for SVN checkout\n\n### 1.0.1 - 17th August 2014\n- Run assets after commiting to trunk/tag has complete. Fixes SVN E155037 error.\n\n### 1.0.0 - 26th June 2014\n- Rewrote task to use `grunt.file.copy` (skirts around issues on Windows)\n- Fixed bugs (related to SVN) with commiting the assets directory\n\n### 0.5.0\n - Added support for `assets_dir`\n\n### 0.4.0\n - Add more verbose error messages.\n - Use `cp -a` instead of `cp -ar` (fixes #1,#2)\n\n#### 0.3.0\n - Improved regex for version detection in `{plugin-slug}.php`\n\n#### 0.2.0\n - Improved regex for version detection in `readme.txt` / `{plugin-slug}.php`\n - Abort (fail with warning) if versions do not match\n - Linted plug-in\n - Corrected abort message\n - Fixed readme\n\n#### 0.1.0\nInitial release\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/stephenharris/grunt-wp-deploy.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "1.2.1"
}
